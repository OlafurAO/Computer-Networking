%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 777.000000 393.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.4 (Build 17E199) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 777 393
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 777 393
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /F put
dup 34 /i put
dup 35 /r put
dup 36 /e put
dup 37 /w put
dup 38 /a put
dup 39 /l put
dup 40 /M put
dup 41 /d put
dup 42 /c put
dup 43 /space put
dup 44 /R put
dup 45 /o put
dup 46 /D put
dup 47 /t put
dup 48 /b put
dup 49 /s put
dup 50 /P put
dup 51 /u put
dup 52 /W put
dup 53 /S put
dup 54 /v put
dup 55 /Z put
dup 56 /I put
dup 57 /n put
dup 58 /O put
dup 59 /uniFB03 put
dup 60 /h put
dup 61 /k put
dup 62 /B put
dup 63 /T put
dup 64 /m put
dup 65 /C put
dup 66 /p put
dup 67 /y put
dup 68 /L put
dup 69 /A put
dup 70 /N put
dup 71 /f put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<










00>] def
/CharStrings 41 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/B 3 def
/C 4 def
/D 5 def
/F 6 def
/I 7 def
/L 8 def
/M 9 def
/N 10 def
/O 11 def
/P 12 def
/R 13 def
/S 14 def
/T 15 def
/W 16 def
/Z 17 def
/a 18 def
/b 19 def
/c 20 def
/d 21 def
/e 22 def
/f 23 def
/h 24 def
/i 25 def
/k 26 def
/l 27 def
/m 28 def
/n 29 def
/o 30 def
/p 31 def
/r 32 def
/s 33 def
/t 34 def
/u 35 def
/v 36 def
/w 37 def
/y 38 def
/uniFB03 39 def
/uni2B91 40 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec

13C72A80460E82C189C255BE90E3CCC95300D3AB24BA1747784D8265F668689B775B6CAD7A066F7BB3289CFD93EC3F3EED0C77B73748A55FC7C0957A23918772082AB0825B765B8C2F1949F1FAF963BCB140B3238E9EF147ECBD6D9E8B6016909B4922DC872638790DF0964B9B27FCEAD90AE4B12274D3E8A965AFB9FD16A4B119C9A5A20729DE5D6A6954609D2AC0A183F7F16B695267AB57A6D1892318A9DDBC628F21289A4A3E23A22F8955B7A754EF937BFEF75A478BDA5D28A95CBB701D087224067F0B016618326113ED910F1CECC5F43D4F0558BE15A2ECC582950C6187A3164CD412CB1941500AAFEC0882AE3AD5DC1CDBBBB56B97A4507D587CB57CD21AA14CB8C5BA2914A66B9A150AE0628C53CEF0F88E36F6913DA882C3724E0EE792C042261D70DFB3406972EDC099E803C4A0EDCACA8613058EAF854668DDC45067FF734A9942D197FE0B02B7EECF184D20BBF3EB614DFCFEB1872C830507D5B7C97F49F4B02CEB5110AE532B8973726BF338BEB0EB9AAB8445C8222459E16F000EBE0508B719D52C11B375DA690887FD1C7261A572504055F6F44206894F6FFDF5885D4F392FB800EEDA87C39AEA003AA607F29B0DB0F828E89156088C78BFB56B35842D982FC9609A03299938B0EE85C38A65097D04FBC2EB7E515D167F6DC97747AF5553348BC6BA121141CC69025120843E69954E6C6198EE4D96BE1878014C0321C4C162AEEEE3342B62AACDC7EB109450EFB18484D4C43806CD57EC0A547ACE3D8F4CEB2BA9EACAD7604C4AC6DE7D416B83C30128A6C86DF19FCCEA666D168892C3E6D72C2FE1795B6FE4043835B7ABD560FF351C4306486087214D2F09EC5DE16A35C946B352A9741B8CA72665BB02F6D7455BE93666FEC67A5368502C5040FF6FFA02E9BD40FA6C08F4815CDCF21AE2204B27C60005B628302256A00A77F21B22244CBC81AFDDAAD8B2D3EB4CDD813E35AE836B9338F02F61C3E7F1637404D18733DBAA710C938F564492B982461EDA5B824EB535F919C03CDBC681FDE1EF391D4EB9716116A2F3751E1D5290FF2E0FAE2814996FCA9155B9F460886B8FB42ED9CE96DED01C0A52ABE88E2177C16737D7955166376D207D68052E91358607C07EBF134A23BAD0BE0DE9F3647BBFF6F4770DD69D908767BEC13E9E2BDCADF37733447F2FB3C4765085D4E4E84919F791AA1AB82BF19F836C953D0155C0823AF961767991AFBD1475ADBDDF4B76002203846F1C57149B5DFA5468F7EA807F8B2414C071ACC8F09214D5DC2859B22E26223A247DD18BDA51A835117DCF925E06746086F8DB67AC5453A201F7D54C870DFFC43DD9216273DBCB9EFC53A76009578916192F8ED82E48A0EE413D7514B23A842D5F151D4FBFBC788275E6406929ABDA2C00C493478F321D7E58E83FB8B877D8E2E3F3EAC27BA806FD6A3705


6F91C02B703513C47A5F881C620CC384B7E89601CE3ABCBCC424E552FF24BE9B83E44DB4ADD7FCA9B86F45EDB923F22F44A1B9C628F3187BF8A59E7A92CDE9404EBCDC4F66267A45AEE4398407DB3897633A7985CA0339104D18E212EE2E0C59A2175578C4B7F3B89FD4F938E0D5315CB8A784C612A8DDDD0B99F054F1332585CFF7BA339FEFAA29F7CDEE3277267989F43A7312FED1C3D2DC1B567D5F537A898EA47E751D2CE031E45CD4DA354553630D53EDFD1794DD485996A9B65CB9BC227A22C242D68190E80AFCD3E81EF98B0A92B5A5C3383C0B30D6681DE0AE370C3770963C5A98C3B714D00920489D88999D40A557F1244C03EBDEF9C18044119C03E008BE308037AA7F70E65528591523DFF382539D37416FF3487A52114ABE802A6A64E0BD01133466BCC0E1FA7EBC98E87A8C833B1273F3E847DF0E17F6271FDEAD41042A15C838AE277D92E9356FDEF25422B2A1B1CFDDC3BF5B941A8D17FA5B0925FC65724EAD8A4821BD01F377305F778042FE7D72F4316E9F35D13C1D30C1E9C9D766C5700613F0A096B9DC929E081C36E610C1B9601F588C959CE1D8EE67AD40E4A02858725B90AE1081C1BCEA441E31501337419F59A3A18EDD3A2AA8C8EEA28E01AB853E4E814A05FE46CC065971EACDADCE87A388FF68315E5E212921985877B98EADBCA158DAAF2BD108D6E90C1C083B888DCA32B98240CB6C8B256861C547EDA44C6954CC0BE300414CEC82F8E9C5F041A04B9EEC5DE25BED39A653A1DBECFCB7F38CAC2D2648A1CB5741F457F1B8DB0B119E28624DB02E9BAD8EF52C7D28B30B821345897DAE54813D0DB47BDF8371238615085FF04DA4E2220DEB754823F3FB24AEC0FEC79AABBFF0F29238E5E9C3321FBA4B045D7DFBE4B2983285D15A4451C3557DE4899FD4676F9BC817A75875CE0BFBD85BE1C7EB92E6B53206DCAABF458A2922AA26FC643F6F37B9A4EDADCFE8F85CA5DFC3707D057F3A8AB365719D47E8BE5CEFE87AC3AE309DCAAE8A9268DEAC16E2A451E441A70B72DFB55CB10327609562C2230B69C71778C24C95772C92CDB2F29FE5455E033E478B1AFEE63D97668C5DECBB3ACA2CB9B2EF8CBECDF8144647A2641C2E9E765685D258872D3349320481B9F0CA513EA6E0B70F4E1707D4294BDFADC389623D8A2785FC3CF8CAA046E6BC344292444720E29F0C0D893E82621C7C03C95A2D1CAFFC57ECE9B6665597B145E469C463EE8C23F674D7A935A82C166BB496295C7E691DBAFD1D5D4A9200F27A361B0BAF7089BE9E4B427BB7A848F82677389EF21F6D498D67DDE7FF79341FB5960DCBC61CBA38DCCA43441F3147FB284D97AD7F928FC50ECF2D413EDB45D410BC0DBE5EC432DBB68650870A7FE7D4F1BC468A0E2BD5D6B476ABED1163E8677CBFE871662777FE9090394504AB60C8137B83C95325BACE4D
3E59C9F1074DC5A31CDE0A73E073F1B0F99A9697C1CCA33902194F69764374E5C22649A400D7DD302A23D824D03F74C64A2C923EDE166819C5668E29CE8849ECACB8E327B43877EB181341810A3F6CF507F7AF966671F07204FFCCD50F20C0D1D094D883778AD08E6E6CE32C48C251DBC9A87467EF062E8E9145611F515EA37678A2AA8B4795075D5C9B4864D0832C41F669484F31463519D72DA061C88D0FCDF860F8877FA9AB249BE0451757B5DA2B2151121FEEDC18DD2D3D3302B47AC37B73993086B6D359066AA6A25D72FCB4E3B5FEE199C11D22AB2B708744B74BDA8EC4307061774C0D4BBAF66AA5FEE99AAC3B5D1281B7D6625EF7FA8E3072BC31EB7A27CF0ED953FA416009F3143FB41873DFD6B0EAE4CC7FEF15088892259BBAB7E002EBF0120290C90BE56B64964C596679C9C35CC9A171D51DFD231959EAF14AB8AE74E527887A20ACBD6259FEC07D2248E1E5E88F42955C18BBAF6E3E31AFE1541B45B913EAF7D105ED3B3750AB2C2AA14C216DFE5BD916B18755A6F2812339004F47D5BC998DFC913A4195EF8DD153DF79BB37FC72DC3E394591C038C2E5E7C96405D82BD36EE754803BFB3A4A305EF003F92F5473A87E221F06BE51F202DE931380F95BF81430CDCFFD2F6C05B6C9744E35233AEC45FC5CB06BFCD6F10D418A2681730676045D2E889E983706DAC9D1495289249C564DF201CC9D949F52BF292F173455E0607090B3CCE17D74776672AE065DC37356CE0E181C5E4627555D1A1A6298D6826F5D516117245B36DC26B57125AC354A24F292E31CEE66CD110B37C22C40BFD0892132C23C9E10EDC78178726DC58FDD767D79279DABA4AD6941B02371B6130F72FC0A9B23CF55926D77464D5A23B7B1329316524A2F31A5EF8536950547C295BBF41C2456542D941F906BC749597C6DF9978B8F2456CCB25BB4AE6951C10B8ED3287D85359B60791C1B4041B5851CFEEE80D52700412F8A488E1576D0714814990DA195A21DA889E43250D737E1B5EE3FE97A8D46898588458C082B89B3E510A88F27E0180534EB44163FF5078145858F42DAF571678962725357AB17105C930B797482CA8BB01A0DCF7815A7780EC24234B4A1FC44EC49D9D649368068A99D9CC6BF5C138ACA1042D9E88784BDD55F7F5EACD8648BD4E376CE0A4397D96680D38CF68AE8BA2EB1C803ED89C49A149E8B095F022283EEAC2B1582F7F37CBC4ADF8F862D7F8E3BF772C57F5930EFAD006F751679FF4DD2DC3DA69F7A988111D326AE9731B56DCD5000442BCC3E7E95E86F1DE82C56C67653605398817F0904C7D0222C91B0E3887757B6BCEAFFD649CBF1BA937FF43A6F12B2A037CE2B2561C8149809E4FAF573F85590AFA2D84F006CC7A6429157AA051C1457BF996924A49A319D1485E2B0D40FCBEF3731BD78D5B2A812F2C23031401D88B6
817542BAA86126A28FC9A7992EF3AD0BE3266DC245191DB4E9EDF5F800FF958A9038FC859D374C1FB3C8BB8E4B43D6D4393122137A8ABC5A513DE3D4979C88C9C624B25965E05C9302D925C22CD45CD11AAD03BD0722ECD619EC1477625C00B0C64D3E451D2269449DFAC453F07D92373BF67BAE20A4756A0C9990249B43C5FC2A89485F437DF69557F22BC376F46BF7255CA137925028084D31F11FEE0DB430072FAA32FB04C18B631AF79B3445B378C10F65A755F82C0CAFC8E9C4C542B657C68BA904EFAF8022FD932DB99B0AF94223A35ABA4737634BE524A6C06D739D223B2B6A59C6F8056DEB5C4DAFC016E2A5A16CED243FC2BC607BA88F07ADD315BFC41A1928BED168F01E166017BA089DAD2490C12D0D783F73672436EB7DBB0A75F486F5AE80DEDA3E7E2DCBB60968CC8AA7C42B17C3B468D77ABDD1A9B45979BD72DF4571C51EF258F533D307471DEB364361AED37F27595666EFE4AE37E16E354A80708F89EFB89B9EA7444032B5E4C935C09DB16A3647B57BDDE06431F392C2A1415C9A24E9A06B85434D04744071CA0FDB098411E8F3814F50C7A51A314674BCECEAC6E850EAB1F22F7763C8FB079ADAFD2C2C5FC587D11CAF2389385BD20A44E9CE2BA7D572111938A1E9480D9DC5D18871583729E3899D3A358D45E90243DF91F5BC46C7FC637243DB916CD77A854FFCF8EE6B5515EB91421F13947E1F83F032BC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 777 393 rc
0 393 m
777 393 l
777 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1284 1335 m
2568 1335 l
2568 -1491 l
-1284 -1491 l
h
-1284 1335 m
f
696.03992 329.19113 m
802.65356 254.11288 802.65356 132.38712 696.03992 57.308872 c
589.42688 -17.769753 416.57312 -17.769753 309.96005 57.308872 c
203.34647 132.38712 203.34647 254.11288 309.96005 329.19113 c
416.57312 404.26974 589.42688 404.26974 696.03992 329.19113 c
f
1 J
1 j
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -407 435 cm
1103.0399 105.80887 m
1209.6536 180.88712 1209.6536 302.61288 1103.0399 377.69113 c
996.42688 452.76974 823.57312 452.76974 716.96008 377.69113 c
610.34644 302.61288 610.34644 180.88712 716.96008 105.80887 c
823.57312 30.730247 996.42688 30.730247 1103.0399 105.80887 c
S
0 i
1 1 1 sc
CM
204.99916 117.54768 m
251.66702 92.944664 251.66702 53.055332 204.99916 28.452322 c
158.33154 3.849184 82.668449 3.849184 36.000832 28.452322 c
-10.667024 53.055332 -10.667024 92.944664 36.000832 117.54768 c
82.668449 142.15082 158.33154 142.15082 204.99916 117.54768 c
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -407 435 cm
611.99915 317.45233 m
658.66705 342.05533 658.66705 381.94467 611.99915 406.54767 c
565.33154 431.15082 489.66846 431.15082 443.00082 406.54767 c
396.33298 381.94467 396.33298 342.05533 443.00082 317.45233 c
489.66846 292.84918 565.33154 292.84918 611.99915 317.45233 c
S
0 i
1 1 1 sc
CM
64.5 251.5 m
168.5 251.5 l
168.5 192.5 l
64.5 192.5 l
h
64.5 251.75 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -407 435 cm
471.5 183.5 m
575.5 183.5 l
575.5 242.5 l
471.5 242.5 l
h
471.5 183.25 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 116.5 222.5 cm
/F1.1[ 16 0 0 -16 0 0]sf
-27.096001 -3.223999 m
(!"#$%&'')[ 9.184000 3.552000 5.040000 8.592000 12.128000 8.592000 3.552000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
354.5 344.5 m
471.5 344.5 l
471.5 270.5 l
354.5 270.5 l
h
354 345 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -407 435 cm
761.5 90.5 m
878.5 90.5 l
878.5 164.5 l
761.5 164.5 l
h
761 90 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 412.5 308 cm
-28.152 -12.671997 m
(\($\)"*&'+)[ 13.936000 8.592000 9.488000 3.552000 8.592000 8.592000 3.552000 0.000000 ] xS
-25.927999 5.776001 m
(,$*-#\)+)[ 10.960000 8.592000 8.592000 9.184000 5.040000 9.488000 0.000000 ] xS
-34.080002 24.223999 m
(.&/&0&1$)[ 11.264000 8.592000 5.040000 8.592000 9.488000 8.592000 8.000000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
CM
497 209 m
497 211.5 l
499.20001 211.5 500.98001 213.3 500.98001 215.5 c
501 235.5 l
501 237.7 499.20001 239 497 239 c
465 239 l
462.79999 239 461 237.7 461 235.5 c
461 215.5 l
461 213.3 462.79999 211.5 465 211.5 c
465 209 l
457 209 l
457 205 l
505 205 l
505 209 l
497 209 l
h
465 235 m
497 235 l
497 215 l
465 215 l
465 235 l
h
465 235.5 m
f
655 180 m
655 182.25 l
657.70001 182.25 659.47998 184.05 659.47998 186.25 c
659.5 206.25 l
659.5 208.45 657.70001 210 655.5 210 c
623.5 210 l
621.29999 210 619 208.45 619 206.25 c
619 186.25 l
619 184.05 621.29999 182.25 623 182.25 c
623 180 l
615 180 l
615 176 l
663 176 l
663 180 l
655 180 l
h
623 206 m
655 206 l
655 186 l
623 186 l
623 206 l
h
623.5 206.25 m
f
422 209 m
422 211.5 l
424.20001 211.5 425.98001 213.3 425.98001 215.5 c
426 235.5 l
426 237.7 424.20001 239 422 239 c
390 239 l
387.79999 239 386 237.7 386 235.5 c
386 215.5 l
386 213.3 387.79999 211.5 390 211.5 c
390 209 l
382 209 l
382 205 l
430 205 l
430 209 l
422 209 l
h
390 235 m
422 235 l
422 215 l
390 215 l
390 235 l
h
390 235.5 m
f
/Cs2 SC
1 1 1 sc
69.5 114.5 m
163.5 114.5 l
163.5 45.5 l
69.5 45.5 l
h
69.25 115 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -407 435 cm
476.5 320.5 m
570.5 320.5 l
570.5 389.5 l
476.5 389.5 l
h
476.25 320 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 116.5 80.5 cm
-40.439999 -3.447998 m
(230'"*+4$0+)[ 10.368000 8.896000 9.488000 3.552000 3.552000 8.592000 4.448000 13.904000 8.592000 9.488000 0.000000 ] xS
-23.104 15 m
(5$#6$#)[ 10.368000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0.49998799 0.5 0.5 sc
1 0 0 -1 -407 435 cm
523.5 241.75 m
523.5 320 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 207.5 73 cm
-17.488001 5.776001 m
(.\(7)[ 11.264000 13.936000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
316.5 114.5 m
491.5 114.5 l
491.5 80.5 l
316.5 80.5 l
h
316 115 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -407 435 cm
723.5 320.5 m
898.5 320.5 l
898.5 354.5 l
723.5 354.5 l
h
723 320 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 403.5 98 cm
-70.208 5.776001 m
(89/$#9&'+4$0+5$#6$#)[ 4.144000 8.896000 5.040000 8.592000 5.616000 8.896000 8.592000 3.552000 4.448000 13.904000 8.592000 9.488000 4.448000 10.368000 8.592000 5.328000 8.000000 8.592000 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
100.5 392.5 m
268.5 392.5 l
268.5 329.5 l
100.5 329.5 l
h
100 392.5 m
f
0.60000002 i
0.5 0.5 0.5 sc
1 0 0 -1 -407 435 cm
507.5 42.5 m
675.5 42.5 l
675.5 105.5 l
507.5 105.5 l
h
507 42.5 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 184 361.25 cm
-70.552002 -12.671997 m
(:;*$+!"1</&9=+%"/<+)[ 12.160000 12.784000 8.592000 8.592000 4.448000 9.184000 3.552000 8.000000 8.896000 5.040000 8.592000 8.896000 8.304000 4.448000 12.128000 3.552000 5.040000 8.896000 0.000000 ] xS
-34.672001 5.776001 m
(>'3$/--/<+)[ 10.960000 3.552000 8.896000 8.592000 5.040000 9.184000 9.184000 5.040000 8.896000 0.000000 ] xS
-48.015999 24.223999 m
(?<$#@-@$/$#)[ 9.184000 8.896000 8.592000 5.328000 13.648000 9.184000 13.648000 8.592000 5.040000 8.592000 0.000000 ] xS
/Cs3 SC
0 0 0 sc
CM
357 208 m
357 210.5 l
359.20001 210.5 360.98001 212.3 360.98001 214.5 c
361 234.5 l
361 236.7 359.20001 238 357 238 c
325 238 l
322.79999 238 321 236.7 321 234.5 c
321 214.5 l
321 212.3 322.79999 210.5 325 210.5 c
325 208 l
317 208 l
317 204 l
365 204 l
365 208 l
357 208 l
h
325 234 m
357 234 l
357 214 l
325 214 l
325 234 l
h
325 234.5 m
f
/Cs1 SC
0 sc
1 0 0 -1 418 179.5 cm
-63.152 5.776001 m
(:;*$+A-@B3/$#1)[ 12.160000 12.784000 8.592000 8.592000 4.448000 11.552000 9.184000 13.648000 9.488000 8.896000 5.040000 8.592000 5.328000 0.000000 ] xS
1 0 0 -1 646.5 160 cm
-62.231998 5.776001 m
(2&C#-''+A-@B3/$#)[ 10.368000 8.592000 8.000000 5.040000 9.184000 3.552000 3.552000 4.448000 11.552000 9.184000 13.648000 9.488000 8.896000 5.040000 8.592000 0.000000 ] xS
0.60000002 i
/Cs2 SC
0.49998799 0.5 0.5 sc
1 0 0 -1 -407 435 cm
575.5 216.43532 m
638.55347 221.20715 l
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 611.5 300 cm
-104.136 5.776001 m
(D-*&'+E#$&+F$/%-#=+G-#+A'"9"*)[ 8.896000 9.184000 8.592000 8.592000 3.552000 4.448000 10.368000 5.040000 8.592000 8.592000 4.448000 11.552000 8.592000 5.040000 12.128000 9.184000 5.328000 8.304000 4.448000 4.736000 9.184000 5.328000 4.448000 11.552000 3.552000 3.552000 8.896000 3.552000 0.000000 ] xS
ep
end
%%Trailer
%%EOF
